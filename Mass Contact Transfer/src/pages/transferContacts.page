<apex:page controller="transferContacts" title="Mass Transfer Contacts" id="MassTransferContactsPage">
<!-- -------------------------------------------------------------------------------------
* Mass TransferContacts Page
* M.Smith 8 April 2009
* http://www.force2b.net
*
* Note: The columns displayed in the search results can be modified directly in this
* VisualForce page, even in Production. See the note in the seach results section
* further down in the page for more information.
*  ------------------------------------------------------------------------------------- 
-->

    <!-- ********* JAVASCRIPT USED TO TOGGLE SELECTION OF SEARCH RESULTS ************ -->
    <script  type="text/javascript">
    function customSelectChecked(form, element_name, value)
    {   
        var i = 0;
        for (i = 0; i < form.elements.length; i++) {
            if (form.elements[i].name.search('selected') > 0 && form.elements[i].disabled == false) {
                form.elements[i].checked = value;
            }
        }
    }    
    function customSelectAllOrNoneByCheckbox(form, element_name, control)
    {  customSelectChecked(form, element_name, control.checked); }
    </script>
    
    <apex:form id="txfrContactsForm" >
        <!-- 
        -- Comment/Uncomment one of the following two lines to enable debugging in page controller.
        --    DEGUGTRUE = Show SOQL statement and results of query
        -->
        <!-- <apex:inputHidden id="DebugSetting" value="{!SetDebugModeTRUE}"/>    -->
        <apex:inputHidden id="DebugSetting" value="{!SetDebugModeFALSE}"/>
        <apex:pageBlock title="Mass Transfer Contacts" id="Page" helpTitle="Entering Criteria" helpUrl="https://na1.salesforce.com/help/doc/en/reports_filter.htm">
        <apex:messages />

        <!-- ********* THE [SEARCH] BUTTON ************ -->
        <apex:pageBlockButtons >
            <apex:commandButton title="Find" value="Find" action="{!doSearch}"/>
        </apex:pageBlockButtons>

        <!-- ********* SELECT FROM/TO USER NAME ************ -->
        <apex:pageBlockSection columns="3" id="UserSelection">
            <apex:pageBlockSectionItem id="FromUser">
                <apex:outputLabel >Transfer From User:</apex:outputLabel>
                <apex:selectList value="{!fromUserID}" size="1" required="false" id="fromUserID">
                    <apex:selectOptions value="{!FromUsers}"></apex:selectOptions>
                </apex:selectList>    
            </apex:pageBlockSectionItem>
            <apex:pageBlockSectionItem id="ToUser">
                <apex:outputLabel >Transfer To User:</apex:outputLabel>
                <apex:outputPanel layout="block" styleClass="requiredInput">
                <apex:outputPanel layout="block" styleClass="requiredBlock"/>
                <apex:selectList value="{!toUserID}" size="1" required="false"  id="toUserID">
                    <apex:selectOptions value="{!ToUsers}"></apex:selectOptions>
                </apex:selectList>
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
                <apex:outputLink target="_blank" value="http://www.force2b.net"><apex:image value="{!$Resource.Force2b_Logo}" alt="Force2b" height="31" width="52"/></apex:outputLink>
        </apex:pageBlockSection>

        <!-- ********* SEARCH CRITERIA ************ -->
        <apex:pageBlockSection columns="6" title="Selection Criteria" collapsible="false" id="Criteria" >
        <apex:dataTable value="{!searchCriteria}" columns="5" var="criteria" id="CriteriaRows">
            <apex:column width="25%">
                <apex:selectList value="{!criteria.searchField}" size="1" id="SearchField" >
                    <apex:selectOptions value="{!searchFields}"></apex:selectOptions>
                </apex:selectList>
            </apex:column>

            <apex:column width="25%">
            <apex:selectList size="1" value="{!criteria.searchOperator}" id="SearchOperator">
                <apex:selectOptions value="{!criteria.OperatorSelectList}"></apex:selectOptions>
            </apex:selectList>
            </apex:column>
            <apex:column width="25%">
            <apex:inputText size="20" id="SearchValue" value="{!criteria.searchValue}"/>
            </apex:column>
            <apex:column width="5%"><apex:outputText value="{!criteria.Logical}"/></apex:column>
            <apex:column width="20%"><apex:outputText value="{!criteria.errMsg}" style="color:red;"/></apex:column>
        </apex:dataTable>                 
        </apex:pageBlockSection>

        <apex:pageBlockSection columns="1" >
            Note: Dates Must be Entered in {!InputDateFormat} format or use special date literals (ex: THIS WEEK)
        </apex:pageBlockSection>

        <!-- ********* TRANSFER OPTIONS ************ -->
        <apex:pageBlockSection columns="2" title="Transfer Options" collapsible="false" id="Options">
            <apex:pageBlockSectionItem id="OptioneMail">
	            <apex:inputCheckbox Value="{!sendeMailToOwner}" id="optSendeMail" title="Send eMail" />
                <apex:outputText >Send an eMail to New Owner with List of Contacts</apex:outputText>
            </apex:pageBlockSectionItem>
        </apex:pageBlockSection>
    </apex:pageBlock>
    <!-- </apex:form> -->
    
    <!-- ********* DISPLAY THE SEARCH RESULTS ************ -->
    <!-- Search Results Columns:
    --     The Query in the Page Controller is written to include ALL fields from the Contact object 
    --     along with the following fields from the Account, Contact.Owner, and Account.Owner objects.
    --     The columns displayed in the list below can be changed by the user in the VisualForce page
    --     by just referencing the column name. The advantage is that the Apex code does not need to be
    --     modified to do this, which means changes to the VF page can be made in Production without 
    --     requiring redeploying the change from a Sandbox/Dev instance into Production.
    --            example: to add a custom field "practice", add or change a column to Results.contact.practice__c
    -- 
    --     Additional Fields Available for use in Columns:
    --        contact.Account.Name, contact.Account.Site, contact.Account.Industry, contact.Account.Type
    --        contact.Owner.Name, contact.Owner.Alias
    --        contact.Account.Owner.Name, contact.Account.Owner.Alias
    -->
    <apex:outputPanel id="Results" layout="block" style="{!ShowBlockIfResults}">
    <!--  <apex:form id="resultsForm" >  -->
        <apex:pageBlock id="resultsBlock">
        <apex:pageBlockButtons >
            <apex:commandButton title="Transfer Selected" value="Transfer Selected" action="{!doTransfer}"/>
        </apex:pageBlockButtons>
            <apex:dataTable value="{!searchResults}" var="Results" id="resultsDataTable" 
            styleClass="tableClass list"
            rowClasses="odd,even"
            onrowmouseout="if (window.hiOff){hiOff(this);}" 
            onrowmouseover="if (window.hiOn){hiOn(this);}"> 
                <apex:facet name="caption"></apex:facet>
                <apex:facet name="header"></apex:facet>
                <apex:column >
                    <apex:facet name="header"><apex:inputCheckbox id="selectall" selected="true" 
                        onclick="javascript:customSelectAllOrNoneByCheckbox(document.forms['MassTransferContactsPage:txfrContactsForm'],'MassTransferContactsPage:txfrContactsForm:resultsBlock:resultsDataTable:', this);"/></apex:facet>
                    <apex:inputCheckbox value="{!Results.selected}" id="selected" />
                </apex:column>
                <apex:column >
                    <apex:facet name="header">Name</apex:facet>
                    <apex:outputLink target="_blank" value="{!URLFOR($Action.Contact.View, Results.contact.ID)}" >{!Results.contact.name}</apex:outputLink>
                </apex:column>
                <apex:column >
                    <apex:facet name="header">Account Name</apex:facet>
                    <apex:outputText value="{!Results.contact.account.name}"/>
                </apex:column>
                <apex:column >
                    <apex:facet name="header">Account Site</apex:facet>
                    <apex:outputText value="{!Results.contact.account.site}"/>
                </apex:column>
                <apex:column >
                    <apex:facet name="header">Owner</apex:facet>
                    <apex:outputText value="{!Results.contact.owner.name}"/>
                </apex:column>
                <apex:column >
                    <apex:facet name="header">Created On</apex:facet>
                    <apex:outputText value="{!Results.CreatedDate}"/>
                </apex:column>
            </apex:dataTable>
        <!-- </apex:pageBlock> -->
     </apex:pageBlock>
     </apex:outputPanel>        
     </apex:form>

</apex:page>